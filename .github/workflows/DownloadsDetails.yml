#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (C) 2022 Ing
#


name: Repo Downloads Details

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Github Repository'
        required: true
        default: 'wjz304/Hackintosh-EFI-MSI-Z490i-Unify'


jobs:
  Details:
    runs-on: ubuntu-latest
 

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install datetime urllib3

    - name: Get Downloads Details
      uses: jannekem/run-python-script-action@v1.2
      with:
        script: |
          import os, json, urllib3

          if __name__ == '__main__':
              shields = []
              headers = {'user-agent': 'Python-urllib/3.0'}
              PM = urllib3.PoolManager(headers=headers) 
              res = PM.request('GET', 'https://api.github.com/repos/${{ inputs.repository }}/releases')
              EFI = json.loads(res.data.decode('utf-8'))
              for item in EFI:
                  tag = item['tag_name']
                  shields.append('<img src="https://img.shields.io/github/downloads/${{ inputs.repository }}/{}/total"/>\n\n'.format(tag))
                  for asset in item['assets']:
                      assetName = asset['name']
                      shields.append('* <img src="https://img.shields.io/github/downloads/${{ inputs.repository }}/{}/{}"/>\n'.format(tag, assetName))

              print(shields)
      
      - name: Print Results
        if: steps.script.outputs.error == 'true'
        run: |
          printenv "SCRIPT_STDOUT"
          printenv "SCRIPT_STDERR"
        env:
          SCRIPT_STDOUT: ${{ steps.script.outputs.stdout }}
          SCRIPT_STDERR: ${{ steps.script.outputs.stderr }} 

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"


    - name: Upload results to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body: ${{ env.SCRIPT_STDOUT }}
        tag_name: ${{ steps.tag.outputs.release_tag }}


    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3


    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
